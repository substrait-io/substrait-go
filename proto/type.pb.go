// SPDX-License-Identifier: Apache-2.0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: substrait/type.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Type_Nullability int32

const (
	Type_NULLABILITY_UNSPECIFIED Type_Nullability = 0
	Type_NULLABILITY_NULLABLE    Type_Nullability = 1
	Type_NULLABILITY_REQUIRED    Type_Nullability = 2
)

// Enum value maps for Type_Nullability.
var (
	Type_Nullability_name = map[int32]string{
		0: "NULLABILITY_UNSPECIFIED",
		1: "NULLABILITY_NULLABLE",
		2: "NULLABILITY_REQUIRED",
	}
	Type_Nullability_value = map[string]int32{
		"NULLABILITY_UNSPECIFIED": 0,
		"NULLABILITY_NULLABLE":    1,
		"NULLABILITY_REQUIRED":    2,
	}
)

func (x Type_Nullability) Enum() *Type_Nullability {
	p := new(Type_Nullability)
	*p = x
	return p
}

func (x Type_Nullability) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Type_Nullability) Descriptor() protoreflect.EnumDescriptor {
	return file_substrait_type_proto_enumTypes[0].Descriptor()
}

func (Type_Nullability) Type() protoreflect.EnumType {
	return &file_substrait_type_proto_enumTypes[0]
}

func (x Type_Nullability) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Type_Nullability.Descriptor instead.
func (Type_Nullability) EnumDescriptor() ([]byte, []int) {
	return file_substrait_type_proto_rawDescGZIP(), []int{0, 0}
}

type Type struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Kind:
	//
	//	*Type_Bool
	//	*Type_I8_
	//	*Type_I16_
	//	*Type_I32_
	//	*Type_I64_
	//	*Type_Fp32
	//	*Type_Fp64
	//	*Type_String_
	//	*Type_Binary_
	//	*Type_Timestamp_
	//	*Type_Date_
	//	*Type_Time_
	//	*Type_IntervalYear_
	//	*Type_IntervalDay_
	//	*Type_TimestampTz
	//	*Type_Uuid
	//	*Type_FixedChar_
	//	*Type_Varchar
	//	*Type_FixedBinary_
	//	*Type_Decimal_
	//	*Type_Struct_
	//	*Type_List_
	//	*Type_Map_
	//	*Type_UserDefined_
	//	*Type_UserDefinedTypeReference
	Kind isType_Kind `protobuf_oneof:"kind"`
}

func (x *Type) Reset() {
	*x = Type{}
	if protoimpl.UnsafeEnabled {
		mi := &file_substrait_type_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Type) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Type) ProtoMessage() {}

func (x *Type) ProtoReflect() protoreflect.Message {
	mi := &file_substrait_type_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Type.ProtoReflect.Descriptor instead.
func (*Type) Descriptor() ([]byte, []int) {
	return file_substrait_type_proto_rawDescGZIP(), []int{0}
}

func (m *Type) GetKind() isType_Kind {
	if m != nil {
		return m.Kind
	}
	return nil
}

func (x *Type) GetBool() *Type_Boolean {
	if x, ok := x.GetKind().(*Type_Bool); ok {
		return x.Bool
	}
	return nil
}

func (x *Type) GetI8() *Type_I8 {
	if x, ok := x.GetKind().(*Type_I8_); ok {
		return x.I8
	}
	return nil
}

func (x *Type) GetI16() *Type_I16 {
	if x, ok := x.GetKind().(*Type_I16_); ok {
		return x.I16
	}
	return nil
}

func (x *Type) GetI32() *Type_I32 {
	if x, ok := x.GetKind().(*Type_I32_); ok {
		return x.I32
	}
	return nil
}

func (x *Type) GetI64() *Type_I64 {
	if x, ok := x.GetKind().(*Type_I64_); ok {
		return x.I64
	}
	return nil
}

func (x *Type) GetFp32() *Type_FP32 {
	if x, ok := x.GetKind().(*Type_Fp32); ok {
		return x.Fp32
	}
	return nil
}

func (x *Type) GetFp64() *Type_FP64 {
	if x, ok := x.GetKind().(*Type_Fp64); ok {
		return x.Fp64
	}
	return nil
}

func (x *Type) GetString_() *Type_String {
	if x, ok := x.GetKind().(*Type_String_); ok {
		return x.String_
	}
	return nil
}

func (x *Type) GetBinary() *Type_Binary {
	if x, ok := x.GetKind().(*Type_Binary_); ok {
		return x.Binary
	}
	return nil
}

func (x *Type) GetTimestamp() *Type_Timestamp {
	if x, ok := x.GetKind().(*Type_Timestamp_); ok {
		return x.Timestamp
	}
	return nil
}

func (x *Type) GetDate() *Type_Date {
	if x, ok := x.GetKind().(*Type_Date_); ok {
		return x.Date
	}
	return nil
}

func (x *Type) GetTime() *Type_Time {
	if x, ok := x.GetKind().(*Type_Time_); ok {
		return x.Time
	}
	return nil
}

func (x *Type) GetIntervalYear() *Type_IntervalYear {
	if x, ok := x.GetKind().(*Type_IntervalYear_); ok {
		return x.IntervalYear
	}
	return nil
}

func (x *Type) GetIntervalDay() *Type_IntervalDay {
	if x, ok := x.GetKind().(*Type_IntervalDay_); ok {
		return x.IntervalDay
	}
	return nil
}

func (x *Type) GetTimestampTz() *Type_TimestampTZ {
	if x, ok := x.GetKind().(*Type_TimestampTz); ok {
		return x.TimestampTz
	}
	return nil
}

func (x *Type) GetUuid() *Type_UUID {
	if x, ok := x.GetKind().(*Type_Uuid); ok {
		return x.Uuid
	}
	return nil
}

func (x *Type) GetFixedChar() *Type_FixedChar {
	if x, ok := x.GetKind().(*Type_FixedChar_); ok {
		return x.FixedChar
	}
	return nil
}

func (x *Type) GetVarchar() *Type_VarChar {
	if x, ok := x.GetKind().(*Type_Varchar); ok {
		return x.Varchar
	}
	return nil
}

func (x *Type) GetFixedBinary() *Type_FixedBinary {
	if x, ok := x.GetKind().(*Type_FixedBinary_); ok {
		return x.FixedBinary
	}
	return nil
}

func (x *Type) GetDecimal() *Type_Decimal {
	if x, ok := x.GetKind().(*Type_Decimal_); ok {
		return x.Decimal
	}
	return nil
}

func (x *Type) GetStruct() *Type_Struct {
	if x, ok := x.GetKind().(*Type_Struct_); ok {
		return x.Struct
	}
	return nil
}

func (x *Type) GetList() *Type_List {
	if x, ok := x.GetKind().(*Type_List_); ok {
		return x.List
	}
	return nil
}

func (x *Type) GetMap() *Type_Map {
	if x, ok := x.GetKind().(*Type_Map_); ok {
		return x.Map
	}
	return nil
}

func (x *Type) GetUserDefined() *Type_UserDefined {
	if x, ok := x.GetKind().(*Type_UserDefined_); ok {
		return x.UserDefined
	}
	return nil
}

// Deprecated: Marked as deprecated in substrait/type.proto.
func (x *Type) GetUserDefinedTypeReference() uint32 {
	if x, ok := x.GetKind().(*Type_UserDefinedTypeReference); ok {
		return x.UserDefinedTypeReference
	}
	return 0
}

type isType_Kind interface {
	isType_Kind()
}

type Type_Bool struct {
	Bool *Type_Boolean `protobuf:"bytes,1,opt,name=bool,proto3,oneof"`
}

type Type_I8_ struct {
	I8 *Type_I8 `protobuf:"bytes,2,opt,name=i8,proto3,oneof"`
}

type Type_I16_ struct {
	I16 *Type_I16 `protobuf:"bytes,3,opt,name=i16,proto3,oneof"`
}

type Type_I32_ struct {
	I32 *Type_I32 `protobuf:"bytes,5,opt,name=i32,proto3,oneof"`
}

type Type_I64_ struct {
	I64 *Type_I64 `protobuf:"bytes,7,opt,name=i64,proto3,oneof"`
}

type Type_Fp32 struct {
	Fp32 *Type_FP32 `protobuf:"bytes,10,opt,name=fp32,proto3,oneof"`
}

type Type_Fp64 struct {
	Fp64 *Type_FP64 `protobuf:"bytes,11,opt,name=fp64,proto3,oneof"`
}

type Type_String_ struct {
	String_ *Type_String `protobuf:"bytes,12,opt,name=string,proto3,oneof"`
}

type Type_Binary_ struct {
	Binary *Type_Binary `protobuf:"bytes,13,opt,name=binary,proto3,oneof"`
}

type Type_Timestamp_ struct {
	Timestamp *Type_Timestamp `protobuf:"bytes,14,opt,name=timestamp,proto3,oneof"`
}

type Type_Date_ struct {
	Date *Type_Date `protobuf:"bytes,16,opt,name=date,proto3,oneof"`
}

type Type_Time_ struct {
	Time *Type_Time `protobuf:"bytes,17,opt,name=time,proto3,oneof"`
}

type Type_IntervalYear_ struct {
	IntervalYear *Type_IntervalYear `protobuf:"bytes,19,opt,name=interval_year,json=intervalYear,proto3,oneof"`
}

type Type_IntervalDay_ struct {
	IntervalDay *Type_IntervalDay `protobuf:"bytes,20,opt,name=interval_day,json=intervalDay,proto3,oneof"`
}

type Type_TimestampTz struct {
	TimestampTz *Type_TimestampTZ `protobuf:"bytes,29,opt,name=timestamp_tz,json=timestampTz,proto3,oneof"`
}

type Type_Uuid struct {
	Uuid *Type_UUID `protobuf:"bytes,32,opt,name=uuid,proto3,oneof"`
}

type Type_FixedChar_ struct {
	FixedChar *Type_FixedChar `protobuf:"bytes,21,opt,name=fixed_char,json=fixedChar,proto3,oneof"`
}

type Type_Varchar struct {
	Varchar *Type_VarChar `protobuf:"bytes,22,opt,name=varchar,proto3,oneof"`
}

type Type_FixedBinary_ struct {
	FixedBinary *Type_FixedBinary `protobuf:"bytes,23,opt,name=fixed_binary,json=fixedBinary,proto3,oneof"`
}

type Type_Decimal_ struct {
	Decimal *Type_Decimal `protobuf:"bytes,24,opt,name=decimal,proto3,oneof"`
}

type Type_Struct_ struct {
	Struct *Type_Struct `protobuf:"bytes,25,opt,name=struct,proto3,oneof"`
}

type Type_List_ struct {
	List *Type_List `protobuf:"bytes,27,opt,name=list,proto3,oneof"`
}

type Type_Map_ struct {
	Map *Type_Map `protobuf:"bytes,28,opt,name=map,proto3,oneof"`
}

type Type_UserDefined_ struct {
	UserDefined *Type_UserDefined `protobuf:"bytes,30,opt,name=user_defined,json=userDefined,proto3,oneof"`
}

type Type_UserDefinedTypeReference struct {
	// Deprecated in favor of user_defined, which allows nullability and
	// variations to be specified. If user_defined_type_reference is
	// encountered, treat it as being non-nullable and having the default
	// variation.
	//
	// Deprecated: Marked as deprecated in substrait/type.proto.
	UserDefinedTypeReference uint32 `protobuf:"varint,31,opt,name=user_defined_type_reference,json=userDefinedTypeReference,proto3,oneof"`
}

func (*Type_Bool) isType_Kind() {}

func (*Type_I8_) isType_Kind() {}

func (*Type_I16_) isType_Kind() {}

func (*Type_I32_) isType_Kind() {}

func (*Type_I64_) isType_Kind() {}

func (*Type_Fp32) isType_Kind() {}

func (*Type_Fp64) isType_Kind() {}

func (*Type_String_) isType_Kind() {}

func (*Type_Binary_) isType_Kind() {}

func (*Type_Timestamp_) isType_Kind() {}

func (*Type_Date_) isType_Kind() {}

func (*Type_Time_) isType_Kind() {}

func (*Type_IntervalYear_) isType_Kind() {}

func (*Type_IntervalDay_) isType_Kind() {}

func (*Type_TimestampTz) isType_Kind() {}

func (*Type_Uuid) isType_Kind() {}

func (*Type_FixedChar_) isType_Kind() {}

func (*Type_Varchar) isType_Kind() {}

func (*Type_FixedBinary_) isType_Kind() {}

func (*Type_Decimal_) isType_Kind() {}

func (*Type_Struct_) isType_Kind() {}

func (*Type_List_) isType_Kind() {}

func (*Type_Map_) isType_Kind() {}

func (*Type_UserDefined_) isType_Kind() {}

func (*Type_UserDefinedTypeReference) isType_Kind() {}

// A message for modeling name/type pairs.
//
// Useful for representing relation schemas.
//
// Notes:
//
// * The names field is in depth-first order.
//
// For example a schema such as:
//
// a: int64
// b: struct<c: float32, d: string>
//
// would have a `names` field that looks like:
//
// ["a", "b", "c", "d"]
//
// * Only struct fields are contained in this field's elements,
// * Map keys should be traversed first, then values when producing/consuming
type NamedStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// list of names in dfs order
	Names  []string     `protobuf:"bytes,1,rep,name=names,proto3" json:"names,omitempty"`
	Struct *Type_Struct `protobuf:"bytes,2,opt,name=struct,proto3" json:"struct,omitempty"`
}

func (x *NamedStruct) Reset() {
	*x = NamedStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_substrait_type_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NamedStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamedStruct) ProtoMessage() {}

func (x *NamedStruct) ProtoReflect() protoreflect.Message {
	mi := &file_substrait_type_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamedStruct.ProtoReflect.Descriptor instead.
func (*NamedStruct) Descriptor() ([]byte, []int) {
	return file_substrait_type_proto_rawDescGZIP(), []int{1}
}

func (x *NamedStruct) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

func (x *NamedStruct) GetStruct() *Type_Struct {
	if x != nil {
		return x.Struct
	}
	return nil
}

type Type_Boolean struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeVariationReference uint32           `protobuf:"varint,1,opt,name=type_variation_reference,json=typeVariationReference,proto3" json:"type_variation_reference,omitempty"`
	Nullability            Type_Nullability `protobuf:"varint,2,opt,name=nullability,proto3,enum=substrait.Type_Nullability" json:"nullability,omitempty"`
}

func (x *Type_Boolean) Reset() {
	*x = Type_Boolean{}
	if protoimpl.UnsafeEnabled {
		mi := &file_substrait_type_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Type_Boolean) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Type_Boolean) ProtoMessage() {}

func (x *Type_Boolean) ProtoReflect() protoreflect.Message {
	mi := &file_substrait_type_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Type_Boolean.ProtoReflect.Descriptor instead.
func (*Type_Boolean) Descriptor() ([]byte, []int) {
	return file_substrait_type_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Type_Boolean) GetTypeVariationReference() uint32 {
	if x != nil {
		return x.TypeVariationReference
	}
	return 0
}

func (x *Type_Boolean) GetNullability() Type_Nullability {
	if x != nil {
		return x.Nullability
	}
	return Type_NULLABILITY_UNSPECIFIED
}

type Type_I8 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeVariationReference uint32           `protobuf:"varint,1,opt,name=type_variation_reference,json=typeVariationReference,proto3" json:"type_variation_reference,omitempty"`
	Nullability            Type_Nullability `protobuf:"varint,2,opt,name=nullability,proto3,enum=substrait.Type_Nullability" json:"nullability,omitempty"`
}

func (x *Type_I8) Reset() {
	*x = Type_I8{}
	if protoimpl.UnsafeEnabled {
		mi := &file_substrait_type_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Type_I8) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Type_I8) ProtoMessage() {}

func (x *Type_I8) ProtoReflect() protoreflect.Message {
	mi := &file_substrait_type_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Type_I8.ProtoReflect.Descriptor instead.
func (*Type_I8) Descriptor() ([]byte, []int) {
	return file_substrait_type_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Type_I8) GetTypeVariationReference() uint32 {
	if x != nil {
		return x.TypeVariationReference
	}
	return 0
}

func (x *Type_I8) GetNullability() Type_Nullability {
	if x != nil {
		return x.Nullability
	}
	return Type_NULLABILITY_UNSPECIFIED
}

type Type_I16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeVariationReference uint32           `protobuf:"varint,1,opt,name=type_variation_reference,json=typeVariationReference,proto3" json:"type_variation_reference,omitempty"`
	Nullability            Type_Nullability `protobuf:"varint,2,opt,name=nullability,proto3,enum=substrait.Type_Nullability" json:"nullability,omitempty"`
}

func (x *Type_I16) Reset() {
	*x = Type_I16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_substrait_type_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Type_I16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Type_I16) ProtoMessage() {}

func (x *Type_I16) ProtoReflect() protoreflect.Message {
	mi := &file_substrait_type_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Type_I16.ProtoReflect.Descriptor instead.
func (*Type_I16) Descriptor() ([]byte, []int) {
	return file_substrait_type_proto_rawDescGZIP(), []int{0, 2}
}

func (x *Type_I16) GetTypeVariationReference() uint32 {
	if x != nil {
		return x.TypeVariationReference
	}
	return 0
}

func (x *Type_I16) GetNullability() Type_Nullability {
	if x != nil {
		return x.Nullability
	}
	return Type_NULLABILITY_UNSPECIFIED
}

type Type_I32 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeVariationReference uint32           `protobuf:"varint,1,opt,name=type_variation_reference,json=typeVariationReference,proto3" json:"type_variation_reference,omitempty"`
	Nullability            Type_Nullability `protobuf:"varint,2,opt,name=nullability,proto3,enum=substrait.Type_Nullability" json:"nullability,omitempty"`
}

func (x *Type_I32) Reset() {
	*x = Type_I32{}
	if protoimpl.UnsafeEnabled {
		mi := &file_substrait_type_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Type_I32) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Type_I32) ProtoMessage() {}

func (x *Type_I32) ProtoReflect() protoreflect.Message {
	mi := &file_substrait_type_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Type_I32.ProtoReflect.Descriptor instead.
func (*Type_I32) Descriptor() ([]byte, []int) {
	return file_substrait_type_proto_rawDescGZIP(), []int{0, 3}
}

func (x *Type_I32) GetTypeVariationReference() uint32 {
	if x != nil {
		return x.TypeVariationReference
	}
	return 0
}

func (x *Type_I32) GetNullability() Type_Nullability {
	if x != nil {
		return x.Nullability
	}
	return Type_NULLABILITY_UNSPECIFIED
}

type Type_I64 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeVariationReference uint32           `protobuf:"varint,1,opt,name=type_variation_reference,json=typeVariationReference,proto3" json:"type_variation_reference,omitempty"`
	Nullability            Type_Nullability `protobuf:"varint,2,opt,name=nullability,proto3,enum=substrait.Type_Nullability" json:"nullability,omitempty"`
}

func (x *Type_I64) Reset() {
	*x = Type_I64{}
	if protoimpl.UnsafeEnabled {
		mi := &file_substrait_type_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Type_I64) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Type_I64) ProtoMessage() {}

func (x *Type_I64) ProtoReflect() protoreflect.Message {
	mi := &file_substrait_type_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Type_I64.ProtoReflect.Descriptor instead.
func (*Type_I64) Descriptor() ([]byte, []int) {
	return file_substrait_type_proto_rawDescGZIP(), []int{0, 4}
}

func (x *Type_I64) GetTypeVariationReference() uint32 {
	if x != nil {
		return x.TypeVariationReference
	}
	return 0
}

func (x *Type_I64) GetNullability() Type_Nullability {
	if x != nil {
		return x.Nullability
	}
	return Type_NULLABILITY_UNSPECIFIED
}

type Type_FP32 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeVariationReference uint32           `protobuf:"varint,1,opt,name=type_variation_reference,json=typeVariationReference,proto3" json:"type_variation_reference,omitempty"`
	Nullability            Type_Nullability `protobuf:"varint,2,opt,name=nullability,proto3,enum=substrait.Type_Nullability" json:"nullability,omitempty"`
}

func (x *Type_FP32) Reset() {
	*x = Type_FP32{}
	if protoimpl.UnsafeEnabled {
		mi := &file_substrait_type_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Type_FP32) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Type_FP32) ProtoMessage() {}

func (x *Type_FP32) ProtoReflect() protoreflect.Message {
	mi := &file_substrait_type_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Type_FP32.ProtoReflect.Descriptor instead.
func (*Type_FP32) Descriptor() ([]byte, []int) {
	return file_substrait_type_proto_rawDescGZIP(), []int{0, 5}
}

func (x *Type_FP32) GetTypeVariationReference() uint32 {
	if x != nil {
		return x.TypeVariationReference
	}
	return 0
}

func (x *Type_FP32) GetNullability() Type_Nullability {
	if x != nil {
		return x.Nullability
	}
	return Type_NULLABILITY_UNSPECIFIED
}

type Type_FP64 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeVariationReference uint32           `protobuf:"varint,1,opt,name=type_variation_reference,json=typeVariationReference,proto3" json:"type_variation_reference,omitempty"`
	Nullability            Type_Nullability `protobuf:"varint,2,opt,name=nullability,proto3,enum=substrait.Type_Nullability" json:"nullability,omitempty"`
}

func (x *Type_FP64) Reset() {
	*x = Type_FP64{}
	if protoimpl.UnsafeEnabled {
		mi := &file_substrait_type_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Type_FP64) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Type_FP64) ProtoMessage() {}

func (x *Type_FP64) ProtoReflect() protoreflect.Message {
	mi := &file_substrait_type_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Type_FP64.ProtoReflect.Descriptor instead.
func (*Type_FP64) Descriptor() ([]byte, []int) {
	return file_substrait_type_proto_rawDescGZIP(), []int{0, 6}
}

func (x *Type_FP64) GetTypeVariationReference() uint32 {
	if x != nil {
		return x.TypeVariationReference
	}
	return 0
}

func (x *Type_FP64) GetNullability() Type_Nullability {
	if x != nil {
		return x.Nullability
	}
	return Type_NULLABILITY_UNSPECIFIED
}

type Type_String struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeVariationReference uint32           `protobuf:"varint,1,opt,name=type_variation_reference,json=typeVariationReference,proto3" json:"type_variation_reference,omitempty"`
	Nullability            Type_Nullability `protobuf:"varint,2,opt,name=nullability,proto3,enum=substrait.Type_Nullability" json:"nullability,omitempty"`
}

func (x *Type_String) Reset() {
	*x = Type_String{}
	if protoimpl.UnsafeEnabled {
		mi := &file_substrait_type_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Type_String) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Type_String) ProtoMessage() {}

func (x *Type_String) ProtoReflect() protoreflect.Message {
	mi := &file_substrait_type_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Type_String.ProtoReflect.Descriptor instead.
func (*Type_String) Descriptor() ([]byte, []int) {
	return file_substrait_type_proto_rawDescGZIP(), []int{0, 7}
}

func (x *Type_String) GetTypeVariationReference() uint32 {
	if x != nil {
		return x.TypeVariationReference
	}
	return 0
}

func (x *Type_String) GetNullability() Type_Nullability {
	if x != nil {
		return x.Nullability
	}
	return Type_NULLABILITY_UNSPECIFIED
}

type Type_Binary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeVariationReference uint32           `protobuf:"varint,1,opt,name=type_variation_reference,json=typeVariationReference,proto3" json:"type_variation_reference,omitempty"`
	Nullability            Type_Nullability `protobuf:"varint,2,opt,name=nullability,proto3,enum=substrait.Type_Nullability" json:"nullability,omitempty"`
}

func (x *Type_Binary) Reset() {
	*x = Type_Binary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_substrait_type_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Type_Binary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Type_Binary) ProtoMessage() {}

func (x *Type_Binary) ProtoReflect() protoreflect.Message {
	mi := &file_substrait_type_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Type_Binary.ProtoReflect.Descriptor instead.
func (*Type_Binary) Descriptor() ([]byte, []int) {
	return file_substrait_type_proto_rawDescGZIP(), []int{0, 8}
}

func (x *Type_Binary) GetTypeVariationReference() uint32 {
	if x != nil {
		return x.TypeVariationReference
	}
	return 0
}

func (x *Type_Binary) GetNullability() Type_Nullability {
	if x != nil {
		return x.Nullability
	}
	return Type_NULLABILITY_UNSPECIFIED
}

type Type_Timestamp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeVariationReference uint32           `protobuf:"varint,1,opt,name=type_variation_reference,json=typeVariationReference,proto3" json:"type_variation_reference,omitempty"`
	Nullability            Type_Nullability `protobuf:"varint,2,opt,name=nullability,proto3,enum=substrait.Type_Nullability" json:"nullability,omitempty"`
}

func (x *Type_Timestamp) Reset() {
	*x = Type_Timestamp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_substrait_type_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Type_Timestamp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Type_Timestamp) ProtoMessage() {}

func (x *Type_Timestamp) ProtoReflect() protoreflect.Message {
	mi := &file_substrait_type_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Type_Timestamp.ProtoReflect.Descriptor instead.
func (*Type_Timestamp) Descriptor() ([]byte, []int) {
	return file_substrait_type_proto_rawDescGZIP(), []int{0, 9}
}

func (x *Type_Timestamp) GetTypeVariationReference() uint32 {
	if x != nil {
		return x.TypeVariationReference
	}
	return 0
}

func (x *Type_Timestamp) GetNullability() Type_Nullability {
	if x != nil {
		return x.Nullability
	}
	return Type_NULLABILITY_UNSPECIFIED
}

type Type_Date struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeVariationReference uint32           `protobuf:"varint,1,opt,name=type_variation_reference,json=typeVariationReference,proto3" json:"type_variation_reference,omitempty"`
	Nullability            Type_Nullability `protobuf:"varint,2,opt,name=nullability,proto3,enum=substrait.Type_Nullability" json:"nullability,omitempty"`
}

func (x *Type_Date) Reset() {
	*x = Type_Date{}
	if protoimpl.UnsafeEnabled {
		mi := &file_substrait_type_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Type_Date) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Type_Date) ProtoMessage() {}

func (x *Type_Date) ProtoReflect() protoreflect.Message {
	mi := &file_substrait_type_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Type_Date.ProtoReflect.Descriptor instead.
func (*Type_Date) Descriptor() ([]byte, []int) {
	return file_substrait_type_proto_rawDescGZIP(), []int{0, 10}
}

func (x *Type_Date) GetTypeVariationReference() uint32 {
	if x != nil {
		return x.TypeVariationReference
	}
	return 0
}

func (x *Type_Date) GetNullability() Type_Nullability {
	if x != nil {
		return x.Nullability
	}
	return Type_NULLABILITY_UNSPECIFIED
}

type Type_Time struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeVariationReference uint32           `protobuf:"varint,1,opt,name=type_variation_reference,json=typeVariationReference,proto3" json:"type_variation_reference,omitempty"`
	Nullability            Type_Nullability `protobuf:"varint,2,opt,name=nullability,proto3,enum=substrait.Type_Nullability" json:"nullability,omitempty"`
}

func (x *Type_Time) Reset() {
	*x = Type_Time{}
	if protoimpl.UnsafeEnabled {
		mi := &file_substrait_type_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Type_Time) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Type_Time) ProtoMessage() {}

func (x *Type_Time) ProtoReflect() protoreflect.Message {
	mi := &file_substrait_type_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Type_Time.ProtoReflect.Descriptor instead.
func (*Type_Time) Descriptor() ([]byte, []int) {
	return file_substrait_type_proto_rawDescGZIP(), []int{0, 11}
}

func (x *Type_Time) GetTypeVariationReference() uint32 {
	if x != nil {
		return x.TypeVariationReference
	}
	return 0
}

func (x *Type_Time) GetNullability() Type_Nullability {
	if x != nil {
		return x.Nullability
	}
	return Type_NULLABILITY_UNSPECIFIED
}

type Type_TimestampTZ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeVariationReference uint32           `protobuf:"varint,1,opt,name=type_variation_reference,json=typeVariationReference,proto3" json:"type_variation_reference,omitempty"`
	Nullability            Type_Nullability `protobuf:"varint,2,opt,name=nullability,proto3,enum=substrait.Type_Nullability" json:"nullability,omitempty"`
}

func (x *Type_TimestampTZ) Reset() {
	*x = Type_TimestampTZ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_substrait_type_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Type_TimestampTZ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Type_TimestampTZ) ProtoMessage() {}

func (x *Type_TimestampTZ) ProtoReflect() protoreflect.Message {
	mi := &file_substrait_type_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Type_TimestampTZ.ProtoReflect.Descriptor instead.
func (*Type_TimestampTZ) Descriptor() ([]byte, []int) {
	return file_substrait_type_proto_rawDescGZIP(), []int{0, 12}
}

func (x *Type_TimestampTZ) GetTypeVariationReference() uint32 {
	if x != nil {
		return x.TypeVariationReference
	}
	return 0
}

func (x *Type_TimestampTZ) GetNullability() Type_Nullability {
	if x != nil {
		return x.Nullability
	}
	return Type_NULLABILITY_UNSPECIFIED
}

type Type_IntervalYear struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeVariationReference uint32           `protobuf:"varint,1,opt,name=type_variation_reference,json=typeVariationReference,proto3" json:"type_variation_reference,omitempty"`
	Nullability            Type_Nullability `protobuf:"varint,2,opt,name=nullability,proto3,enum=substrait.Type_Nullability" json:"nullability,omitempty"`
}

func (x *Type_IntervalYear) Reset() {
	*x = Type_IntervalYear{}
	if protoimpl.UnsafeEnabled {
		mi := &file_substrait_type_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Type_IntervalYear) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Type_IntervalYear) ProtoMessage() {}

func (x *Type_IntervalYear) ProtoReflect() protoreflect.Message {
	mi := &file_substrait_type_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Type_IntervalYear.ProtoReflect.Descriptor instead.
func (*Type_IntervalYear) Descriptor() ([]byte, []int) {
	return file_substrait_type_proto_rawDescGZIP(), []int{0, 13}
}

func (x *Type_IntervalYear) GetTypeVariationReference() uint32 {
	if x != nil {
		return x.TypeVariationReference
	}
	return 0
}

func (x *Type_IntervalYear) GetNullability() Type_Nullability {
	if x != nil {
		return x.Nullability
	}
	return Type_NULLABILITY_UNSPECIFIED
}

type Type_IntervalDay struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeVariationReference uint32           `protobuf:"varint,1,opt,name=type_variation_reference,json=typeVariationReference,proto3" json:"type_variation_reference,omitempty"`
	Nullability            Type_Nullability `protobuf:"varint,2,opt,name=nullability,proto3,enum=substrait.Type_Nullability" json:"nullability,omitempty"`
}

func (x *Type_IntervalDay) Reset() {
	*x = Type_IntervalDay{}
	if protoimpl.UnsafeEnabled {
		mi := &file_substrait_type_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Type_IntervalDay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Type_IntervalDay) ProtoMessage() {}

func (x *Type_IntervalDay) ProtoReflect() protoreflect.Message {
	mi := &file_substrait_type_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Type_IntervalDay.ProtoReflect.Descriptor instead.
func (*Type_IntervalDay) Descriptor() ([]byte, []int) {
	return file_substrait_type_proto_rawDescGZIP(), []int{0, 14}
}

func (x *Type_IntervalDay) GetTypeVariationReference() uint32 {
	if x != nil {
		return x.TypeVariationReference
	}
	return 0
}

func (x *Type_IntervalDay) GetNullability() Type_Nullability {
	if x != nil {
		return x.Nullability
	}
	return Type_NULLABILITY_UNSPECIFIED
}

type Type_UUID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeVariationReference uint32           `protobuf:"varint,1,opt,name=type_variation_reference,json=typeVariationReference,proto3" json:"type_variation_reference,omitempty"`
	Nullability            Type_Nullability `protobuf:"varint,2,opt,name=nullability,proto3,enum=substrait.Type_Nullability" json:"nullability,omitempty"`
}

func (x *Type_UUID) Reset() {
	*x = Type_UUID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_substrait_type_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Type_UUID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Type_UUID) ProtoMessage() {}

func (x *Type_UUID) ProtoReflect() protoreflect.Message {
	mi := &file_substrait_type_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Type_UUID.ProtoReflect.Descriptor instead.
func (*Type_UUID) Descriptor() ([]byte, []int) {
	return file_substrait_type_proto_rawDescGZIP(), []int{0, 15}
}

func (x *Type_UUID) GetTypeVariationReference() uint32 {
	if x != nil {
		return x.TypeVariationReference
	}
	return 0
}

func (x *Type_UUID) GetNullability() Type_Nullability {
	if x != nil {
		return x.Nullability
	}
	return Type_NULLABILITY_UNSPECIFIED
}

// Start compound types.
type Type_FixedChar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Length                 int32            `protobuf:"varint,1,opt,name=length,proto3" json:"length,omitempty"`
	TypeVariationReference uint32           `protobuf:"varint,2,opt,name=type_variation_reference,json=typeVariationReference,proto3" json:"type_variation_reference,omitempty"`
	Nullability            Type_Nullability `protobuf:"varint,3,opt,name=nullability,proto3,enum=substrait.Type_Nullability" json:"nullability,omitempty"`
}

func (x *Type_FixedChar) Reset() {
	*x = Type_FixedChar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_substrait_type_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Type_FixedChar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Type_FixedChar) ProtoMessage() {}

func (x *Type_FixedChar) ProtoReflect() protoreflect.Message {
	mi := &file_substrait_type_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Type_FixedChar.ProtoReflect.Descriptor instead.
func (*Type_FixedChar) Descriptor() ([]byte, []int) {
	return file_substrait_type_proto_rawDescGZIP(), []int{0, 16}
}

func (x *Type_FixedChar) GetLength() int32 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *Type_FixedChar) GetTypeVariationReference() uint32 {
	if x != nil {
		return x.TypeVariationReference
	}
	return 0
}

func (x *Type_FixedChar) GetNullability() Type_Nullability {
	if x != nil {
		return x.Nullability
	}
	return Type_NULLABILITY_UNSPECIFIED
}

type Type_VarChar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Length                 int32            `protobuf:"varint,1,opt,name=length,proto3" json:"length,omitempty"`
	TypeVariationReference uint32           `protobuf:"varint,2,opt,name=type_variation_reference,json=typeVariationReference,proto3" json:"type_variation_reference,omitempty"`
	Nullability            Type_Nullability `protobuf:"varint,3,opt,name=nullability,proto3,enum=substrait.Type_Nullability" json:"nullability,omitempty"`
}

func (x *Type_VarChar) Reset() {
	*x = Type_VarChar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_substrait_type_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Type_VarChar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Type_VarChar) ProtoMessage() {}

func (x *Type_VarChar) ProtoReflect() protoreflect.Message {
	mi := &file_substrait_type_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Type_VarChar.ProtoReflect.Descriptor instead.
func (*Type_VarChar) Descriptor() ([]byte, []int) {
	return file_substrait_type_proto_rawDescGZIP(), []int{0, 17}
}

func (x *Type_VarChar) GetLength() int32 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *Type_VarChar) GetTypeVariationReference() uint32 {
	if x != nil {
		return x.TypeVariationReference
	}
	return 0
}

func (x *Type_VarChar) GetNullability() Type_Nullability {
	if x != nil {
		return x.Nullability
	}
	return Type_NULLABILITY_UNSPECIFIED
}

type Type_FixedBinary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Length                 int32            `protobuf:"varint,1,opt,name=length,proto3" json:"length,omitempty"`
	TypeVariationReference uint32           `protobuf:"varint,2,opt,name=type_variation_reference,json=typeVariationReference,proto3" json:"type_variation_reference,omitempty"`
	Nullability            Type_Nullability `protobuf:"varint,3,opt,name=nullability,proto3,enum=substrait.Type_Nullability" json:"nullability,omitempty"`
}

func (x *Type_FixedBinary) Reset() {
	*x = Type_FixedBinary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_substrait_type_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Type_FixedBinary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Type_FixedBinary) ProtoMessage() {}

func (x *Type_FixedBinary) ProtoReflect() protoreflect.Message {
	mi := &file_substrait_type_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Type_FixedBinary.ProtoReflect.Descriptor instead.
func (*Type_FixedBinary) Descriptor() ([]byte, []int) {
	return file_substrait_type_proto_rawDescGZIP(), []int{0, 18}
}

func (x *Type_FixedBinary) GetLength() int32 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *Type_FixedBinary) GetTypeVariationReference() uint32 {
	if x != nil {
		return x.TypeVariationReference
	}
	return 0
}

func (x *Type_FixedBinary) GetNullability() Type_Nullability {
	if x != nil {
		return x.Nullability
	}
	return Type_NULLABILITY_UNSPECIFIED
}

type Type_Decimal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scale                  int32            `protobuf:"varint,1,opt,name=scale,proto3" json:"scale,omitempty"`
	Precision              int32            `protobuf:"varint,2,opt,name=precision,proto3" json:"precision,omitempty"`
	TypeVariationReference uint32           `protobuf:"varint,3,opt,name=type_variation_reference,json=typeVariationReference,proto3" json:"type_variation_reference,omitempty"`
	Nullability            Type_Nullability `protobuf:"varint,4,opt,name=nullability,proto3,enum=substrait.Type_Nullability" json:"nullability,omitempty"`
}

func (x *Type_Decimal) Reset() {
	*x = Type_Decimal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_substrait_type_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Type_Decimal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Type_Decimal) ProtoMessage() {}

func (x *Type_Decimal) ProtoReflect() protoreflect.Message {
	mi := &file_substrait_type_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Type_Decimal.ProtoReflect.Descriptor instead.
func (*Type_Decimal) Descriptor() ([]byte, []int) {
	return file_substrait_type_proto_rawDescGZIP(), []int{0, 19}
}

func (x *Type_Decimal) GetScale() int32 {
	if x != nil {
		return x.Scale
	}
	return 0
}

func (x *Type_Decimal) GetPrecision() int32 {
	if x != nil {
		return x.Precision
	}
	return 0
}

func (x *Type_Decimal) GetTypeVariationReference() uint32 {
	if x != nil {
		return x.TypeVariationReference
	}
	return 0
}

func (x *Type_Decimal) GetNullability() Type_Nullability {
	if x != nil {
		return x.Nullability
	}
	return Type_NULLABILITY_UNSPECIFIED
}

type Type_Struct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Types                  []*Type          `protobuf:"bytes,1,rep,name=types,proto3" json:"types,omitempty"`
	TypeVariationReference uint32           `protobuf:"varint,2,opt,name=type_variation_reference,json=typeVariationReference,proto3" json:"type_variation_reference,omitempty"`
	Nullability            Type_Nullability `protobuf:"varint,3,opt,name=nullability,proto3,enum=substrait.Type_Nullability" json:"nullability,omitempty"`
}

func (x *Type_Struct) Reset() {
	*x = Type_Struct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_substrait_type_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Type_Struct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Type_Struct) ProtoMessage() {}

func (x *Type_Struct) ProtoReflect() protoreflect.Message {
	mi := &file_substrait_type_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Type_Struct.ProtoReflect.Descriptor instead.
func (*Type_Struct) Descriptor() ([]byte, []int) {
	return file_substrait_type_proto_rawDescGZIP(), []int{0, 20}
}

func (x *Type_Struct) GetTypes() []*Type {
	if x != nil {
		return x.Types
	}
	return nil
}

func (x *Type_Struct) GetTypeVariationReference() uint32 {
	if x != nil {
		return x.TypeVariationReference
	}
	return 0
}

func (x *Type_Struct) GetNullability() Type_Nullability {
	if x != nil {
		return x.Nullability
	}
	return Type_NULLABILITY_UNSPECIFIED
}

type Type_List struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type                   *Type            `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	TypeVariationReference uint32           `protobuf:"varint,2,opt,name=type_variation_reference,json=typeVariationReference,proto3" json:"type_variation_reference,omitempty"`
	Nullability            Type_Nullability `protobuf:"varint,3,opt,name=nullability,proto3,enum=substrait.Type_Nullability" json:"nullability,omitempty"`
}

func (x *Type_List) Reset() {
	*x = Type_List{}
	if protoimpl.UnsafeEnabled {
		mi := &file_substrait_type_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Type_List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Type_List) ProtoMessage() {}

func (x *Type_List) ProtoReflect() protoreflect.Message {
	mi := &file_substrait_type_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Type_List.ProtoReflect.Descriptor instead.
func (*Type_List) Descriptor() ([]byte, []int) {
	return file_substrait_type_proto_rawDescGZIP(), []int{0, 21}
}

func (x *Type_List) GetType() *Type {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *Type_List) GetTypeVariationReference() uint32 {
	if x != nil {
		return x.TypeVariationReference
	}
	return 0
}

func (x *Type_List) GetNullability() Type_Nullability {
	if x != nil {
		return x.Nullability
	}
	return Type_NULLABILITY_UNSPECIFIED
}

type Type_Map struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key                    *Type            `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                  *Type            `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	TypeVariationReference uint32           `protobuf:"varint,3,opt,name=type_variation_reference,json=typeVariationReference,proto3" json:"type_variation_reference,omitempty"`
	Nullability            Type_Nullability `protobuf:"varint,4,opt,name=nullability,proto3,enum=substrait.Type_Nullability" json:"nullability,omitempty"`
}

func (x *Type_Map) Reset() {
	*x = Type_Map{}
	if protoimpl.UnsafeEnabled {
		mi := &file_substrait_type_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Type_Map) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Type_Map) ProtoMessage() {}

func (x *Type_Map) ProtoReflect() protoreflect.Message {
	mi := &file_substrait_type_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Type_Map.ProtoReflect.Descriptor instead.
func (*Type_Map) Descriptor() ([]byte, []int) {
	return file_substrait_type_proto_rawDescGZIP(), []int{0, 22}
}

func (x *Type_Map) GetKey() *Type {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *Type_Map) GetValue() *Type {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *Type_Map) GetTypeVariationReference() uint32 {
	if x != nil {
		return x.TypeVariationReference
	}
	return 0
}

func (x *Type_Map) GetNullability() Type_Nullability {
	if x != nil {
		return x.Nullability
	}
	return Type_NULLABILITY_UNSPECIFIED
}

type Type_UserDefined struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeReference          uint32            `protobuf:"varint,1,opt,name=type_reference,json=typeReference,proto3" json:"type_reference,omitempty"`
	TypeVariationReference uint32            `protobuf:"varint,2,opt,name=type_variation_reference,json=typeVariationReference,proto3" json:"type_variation_reference,omitempty"`
	Nullability            Type_Nullability  `protobuf:"varint,3,opt,name=nullability,proto3,enum=substrait.Type_Nullability" json:"nullability,omitempty"`
	TypeParameters         []*Type_Parameter `protobuf:"bytes,4,rep,name=type_parameters,json=typeParameters,proto3" json:"type_parameters,omitempty"`
}

func (x *Type_UserDefined) Reset() {
	*x = Type_UserDefined{}
	if protoimpl.UnsafeEnabled {
		mi := &file_substrait_type_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Type_UserDefined) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Type_UserDefined) ProtoMessage() {}

func (x *Type_UserDefined) ProtoReflect() protoreflect.Message {
	mi := &file_substrait_type_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Type_UserDefined.ProtoReflect.Descriptor instead.
func (*Type_UserDefined) Descriptor() ([]byte, []int) {
	return file_substrait_type_proto_rawDescGZIP(), []int{0, 23}
}

func (x *Type_UserDefined) GetTypeReference() uint32 {
	if x != nil {
		return x.TypeReference
	}
	return 0
}

func (x *Type_UserDefined) GetTypeVariationReference() uint32 {
	if x != nil {
		return x.TypeVariationReference
	}
	return 0
}

func (x *Type_UserDefined) GetNullability() Type_Nullability {
	if x != nil {
		return x.Nullability
	}
	return Type_NULLABILITY_UNSPECIFIED
}

func (x *Type_UserDefined) GetTypeParameters() []*Type_Parameter {
	if x != nil {
		return x.TypeParameters
	}
	return nil
}

type Type_Parameter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Parameter:
	//
	//	*Type_Parameter_Null
	//	*Type_Parameter_DataType
	//	*Type_Parameter_Boolean
	//	*Type_Parameter_Integer
	//	*Type_Parameter_Enum
	//	*Type_Parameter_String_
	Parameter isType_Parameter_Parameter `protobuf_oneof:"parameter"`
}

func (x *Type_Parameter) Reset() {
	*x = Type_Parameter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_substrait_type_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Type_Parameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Type_Parameter) ProtoMessage() {}

func (x *Type_Parameter) ProtoReflect() protoreflect.Message {
	mi := &file_substrait_type_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Type_Parameter.ProtoReflect.Descriptor instead.
func (*Type_Parameter) Descriptor() ([]byte, []int) {
	return file_substrait_type_proto_rawDescGZIP(), []int{0, 24}
}

func (m *Type_Parameter) GetParameter() isType_Parameter_Parameter {
	if m != nil {
		return m.Parameter
	}
	return nil
}

func (x *Type_Parameter) GetNull() *emptypb.Empty {
	if x, ok := x.GetParameter().(*Type_Parameter_Null); ok {
		return x.Null
	}
	return nil
}

func (x *Type_Parameter) GetDataType() *Type {
	if x, ok := x.GetParameter().(*Type_Parameter_DataType); ok {
		return x.DataType
	}
	return nil
}

func (x *Type_Parameter) GetBoolean() bool {
	if x, ok := x.GetParameter().(*Type_Parameter_Boolean); ok {
		return x.Boolean
	}
	return false
}

func (x *Type_Parameter) GetInteger() int64 {
	if x, ok := x.GetParameter().(*Type_Parameter_Integer); ok {
		return x.Integer
	}
	return 0
}

func (x *Type_Parameter) GetEnum() string {
	if x, ok := x.GetParameter().(*Type_Parameter_Enum); ok {
		return x.Enum
	}
	return ""
}

func (x *Type_Parameter) GetString_() string {
	if x, ok := x.GetParameter().(*Type_Parameter_String_); ok {
		return x.String_
	}
	return ""
}

type isType_Parameter_Parameter interface {
	isType_Parameter_Parameter()
}

type Type_Parameter_Null struct {
	// Explicitly null/unspecified parameter, to select the default value (if
	// any).
	Null *emptypb.Empty `protobuf:"bytes,1,opt,name=null,proto3,oneof"`
}

type Type_Parameter_DataType struct {
	// Data type parameters, like the i32 in LIST<i32>.
	DataType *Type `protobuf:"bytes,2,opt,name=data_type,json=dataType,proto3,oneof"`
}

type Type_Parameter_Boolean struct {
	// Value parameters, like the 10 in VARCHAR<10>.
	Boolean bool `protobuf:"varint,3,opt,name=boolean,proto3,oneof"`
}

type Type_Parameter_Integer struct {
	Integer int64 `protobuf:"varint,4,opt,name=integer,proto3,oneof"`
}

type Type_Parameter_Enum struct {
	Enum string `protobuf:"bytes,5,opt,name=enum,proto3,oneof"`
}

type Type_Parameter_String_ struct {
	String_ string `protobuf:"bytes,6,opt,name=string,proto3,oneof"`
}

func (*Type_Parameter_Null) isType_Parameter_Parameter() {}

func (*Type_Parameter_DataType) isType_Parameter_Parameter() {}

func (*Type_Parameter_Boolean) isType_Parameter_Parameter() {}

func (*Type_Parameter_Integer) isType_Parameter_Parameter() {}

func (*Type_Parameter_Enum) isType_Parameter_Parameter() {}

func (*Type_Parameter_String_) isType_Parameter_Parameter() {}

var File_substrait_type_proto protoreflect.FileDescriptor

var file_substrait_type_proto_rawDesc = []byte{
	0x0a, 0x14, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x61, 0x69, 0x74, 0x2f, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x61, 0x69,
	0x74, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb4,
	0x28, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2d, 0x0a, 0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x61, 0x69,
	0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x48, 0x00,
	0x52, 0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x12, 0x24, 0x0a, 0x02, 0x69, 0x38, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x61, 0x69, 0x74, 0x2e, 0x54,
	0x79, 0x70, 0x65, 0x2e, 0x49, 0x38, 0x48, 0x00, 0x52, 0x02, 0x69, 0x38, 0x12, 0x27, 0x0a, 0x03,
	0x69, 0x31, 0x36, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x75, 0x62, 0x73,
	0x74, 0x72, 0x61, 0x69, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x49, 0x31, 0x36, 0x48, 0x00,
	0x52, 0x03, 0x69, 0x31, 0x36, 0x12, 0x27, 0x0a, 0x03, 0x69, 0x33, 0x32, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x61, 0x69, 0x74, 0x2e, 0x54,
	0x79, 0x70, 0x65, 0x2e, 0x49, 0x33, 0x32, 0x48, 0x00, 0x52, 0x03, 0x69, 0x33, 0x32, 0x12, 0x27,
	0x0a, 0x03, 0x69, 0x36, 0x34, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x75,
	0x62, 0x73, 0x74, 0x72, 0x61, 0x69, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x49, 0x36, 0x34,
	0x48, 0x00, 0x52, 0x03, 0x69, 0x36, 0x34, 0x12, 0x2a, 0x0a, 0x04, 0x66, 0x70, 0x33, 0x32, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x61, 0x69,
	0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x46, 0x50, 0x33, 0x32, 0x48, 0x00, 0x52, 0x04, 0x66,
	0x70, 0x33, 0x32, 0x12, 0x2a, 0x0a, 0x04, 0x66, 0x70, 0x36, 0x34, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x61, 0x69, 0x74, 0x2e, 0x54, 0x79,
	0x70, 0x65, 0x2e, 0x46, 0x50, 0x36, 0x34, 0x48, 0x00, 0x52, 0x04, 0x66, 0x70, 0x36, 0x34, 0x12,
	0x30, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x61, 0x69, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x12, 0x30, 0x0a, 0x06, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x61, 0x69, 0x74, 0x2e, 0x54, 0x79,
	0x70, 0x65, 0x2e, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x48, 0x00, 0x52, 0x06, 0x62, 0x69, 0x6e,
	0x61, 0x72, 0x79, 0x12, 0x39, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x61,
	0x69, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x48, 0x00, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x2a,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73,
	0x75, 0x62, 0x73, 0x74, 0x72, 0x61, 0x69, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x44, 0x61,
	0x74, 0x65, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x2a, 0x0a, 0x04, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x74,
	0x72, 0x61, 0x69, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x48, 0x00,
	0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x43, 0x0a, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76,
	0x61, 0x6c, 0x5f, 0x79, 0x65, 0x61, 0x72, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x61, 0x69, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x59, 0x65, 0x61, 0x72, 0x48, 0x00, 0x52, 0x0c, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x59, 0x65, 0x61, 0x72, 0x12, 0x40, 0x0a, 0x0c, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x5f, 0x64, 0x61, 0x79, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x61, 0x69, 0x74, 0x2e, 0x54, 0x79,
	0x70, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x44, 0x61, 0x79, 0x48, 0x00,
	0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x44, 0x61, 0x79, 0x12, 0x40, 0x0a,
	0x0c, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x74, 0x7a, 0x18, 0x1d, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x61, 0x69, 0x74, 0x2e,
	0x54, 0x79, 0x70, 0x65, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x54, 0x5a,
	0x48, 0x00, 0x52, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x54, 0x7a, 0x12,
	0x2a, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x20, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x61, 0x69, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x55,
	0x55, 0x49, 0x44, 0x48, 0x00, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x3a, 0x0a, 0x0a, 0x66,
	0x69, 0x78, 0x65, 0x64, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x61, 0x69, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65,
	0x2e, 0x46, 0x69, 0x78, 0x65, 0x64, 0x43, 0x68, 0x61, 0x72, 0x48, 0x00, 0x52, 0x09, 0x66, 0x69,
	0x78, 0x65, 0x64, 0x43, 0x68, 0x61, 0x72, 0x12, 0x33, 0x0a, 0x07, 0x76, 0x61, 0x72, 0x63, 0x68,
	0x61, 0x72, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x74,
	0x72, 0x61, 0x69, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x56, 0x61, 0x72, 0x43, 0x68, 0x61,
	0x72, 0x48, 0x00, 0x52, 0x07, 0x76, 0x61, 0x72, 0x63, 0x68, 0x61, 0x72, 0x12, 0x40, 0x0a, 0x0c,
	0x66, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x18, 0x17, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x61, 0x69, 0x74, 0x2e, 0x54,
	0x79, 0x70, 0x65, 0x2e, 0x46, 0x69, 0x78, 0x65, 0x64, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x48,
	0x00, 0x52, 0x0b, 0x66, 0x69, 0x78, 0x65, 0x64, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x12, 0x33,
	0x0a, 0x07, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x61, 0x69, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65,
	0x2e, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x07, 0x64, 0x65, 0x63, 0x69,
	0x6d, 0x61, 0x6c, 0x12, 0x30, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x18, 0x19, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x61, 0x69, 0x74, 0x2e,
	0x54, 0x79, 0x70, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x48, 0x00, 0x52, 0x06, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x2a, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x1b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x61, 0x69, 0x74, 0x2e,
	0x54, 0x79, 0x70, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x12, 0x27, 0x0a, 0x03, 0x6d, 0x61, 0x70, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x61, 0x69, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x2e,
	0x4d, 0x61, 0x70, 0x48, 0x00, 0x52, 0x03, 0x6d, 0x61, 0x70, 0x12, 0x40, 0x0a, 0x0c, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x61, 0x69, 0x74, 0x2e, 0x54, 0x79, 0x70,
	0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x48, 0x00, 0x52,
	0x0b, 0x75, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x43, 0x0a, 0x1b,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x1f, 0x20, 0x01, 0x28,
	0x0d, 0x42, 0x02, 0x18, 0x01, 0x48, 0x00, 0x52, 0x18, 0x75, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x1a, 0x82, 0x01, 0x0a, 0x07, 0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x12, 0x38, 0x0a,
	0x18, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x76, 0x61, 0x72, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x16, 0x74, 0x79, 0x70, 0x65, 0x56, 0x61, 0x72, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x3d, 0x0a, 0x0b, 0x6e, 0x75, 0x6c, 0x6c, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x73,
	0x75, 0x62, 0x73, 0x74, 0x72, 0x61, 0x69, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x4e, 0x75,
	0x6c, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x0b, 0x6e, 0x75, 0x6c, 0x6c, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x1a, 0x7d, 0x0a, 0x02, 0x49, 0x38, 0x12, 0x38, 0x0a, 0x18,
	0x74, 0x79, 0x70, 0x65, 0x5f, 0x76, 0x61, 0x72, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x16,
	0x74, 0x79, 0x70, 0x65, 0x56, 0x61, 0x72, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x3d, 0x0a, 0x0b, 0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x73, 0x75,
	0x62, 0x73, 0x74, 0x72, 0x61, 0x69, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x4e, 0x75, 0x6c,
	0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x0b, 0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x1a, 0x7e, 0x0a, 0x03, 0x49, 0x31, 0x36, 0x12, 0x38, 0x0a, 0x18,
	0x74, 0x79, 0x70, 0x65, 0x5f, 0x76, 0x61, 0x72, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x16,
	0x74, 0x79, 0x70, 0x65, 0x56, 0x61, 0x72, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x3d, 0x0a, 0x0b, 0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x73, 0x75,
	0x62, 0x73, 0x74, 0x72, 0x61, 0x69, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x4e, 0x75, 0x6c,
	0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x0b, 0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x1a, 0x7e, 0x0a, 0x03, 0x49, 0x33, 0x32, 0x12, 0x38, 0x0a, 0x18,
	0x74, 0x79, 0x70, 0x65, 0x5f, 0x76, 0x61, 0x72, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x16,
	0x74, 0x79, 0x70, 0x65, 0x56, 0x61, 0x72, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x3d, 0x0a, 0x0b, 0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x73, 0x75,
	0x62, 0x73, 0x74, 0x72, 0x61, 0x69, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x4e, 0x75, 0x6c,
	0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x0b, 0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x1a, 0x7e, 0x0a, 0x03, 0x49, 0x36, 0x34, 0x12, 0x38, 0x0a, 0x18,
	0x74, 0x79, 0x70, 0x65, 0x5f, 0x76, 0x61, 0x72, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x16,
	0x74, 0x79, 0x70, 0x65, 0x56, 0x61, 0x72, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x3d, 0x0a, 0x0b, 0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x73, 0x75,
	0x62, 0x73, 0x74, 0x72, 0x61, 0x69, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x4e, 0x75, 0x6c,
	0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x0b, 0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x1a, 0x7f, 0x0a, 0x04, 0x46, 0x50, 0x33, 0x32, 0x12, 0x38, 0x0a,
	0x18, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x76, 0x61, 0x72, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x16, 0x74, 0x79, 0x70, 0x65, 0x56, 0x61, 0x72, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x3d, 0x0a, 0x0b, 0x6e, 0x75, 0x6c, 0x6c, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x73,
	0x75, 0x62, 0x73, 0x74, 0x72, 0x61, 0x69, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x4e, 0x75,
	0x6c, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x0b, 0x6e, 0x75, 0x6c, 0x6c, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x1a, 0x7f, 0x0a, 0x04, 0x46, 0x50, 0x36, 0x34, 0x12, 0x38,
	0x0a, 0x18, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x76, 0x61, 0x72, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x16, 0x74, 0x79, 0x70, 0x65, 0x56, 0x61, 0x72, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x3d, 0x0a, 0x0b, 0x6e, 0x75, 0x6c, 0x6c,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e,
	0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x61, 0x69, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x4e,
	0x75, 0x6c, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x0b, 0x6e, 0x75, 0x6c, 0x6c,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x1a, 0x81, 0x01, 0x0a, 0x06, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x12, 0x38, 0x0a, 0x18, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x76, 0x61, 0x72, 0x69, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x16, 0x74, 0x79, 0x70, 0x65, 0x56, 0x61, 0x72, 0x69, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x3d, 0x0a, 0x0b,
	0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1b, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x61, 0x69, 0x74, 0x2e, 0x54, 0x79,
	0x70, 0x65, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x0b,
	0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x1a, 0x81, 0x01, 0x0a, 0x06,
	0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x12, 0x38, 0x0a, 0x18, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x76,
	0x61, 0x72, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x16, 0x74, 0x79, 0x70, 0x65, 0x56, 0x61,
	0x72, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x12, 0x3d, 0x0a, 0x0b, 0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x61, 0x69,
	0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x52, 0x0b, 0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x1a,
	0x84, 0x01, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x38, 0x0a,
	0x18, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x76, 0x61, 0x72, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x16, 0x74, 0x79, 0x70, 0x65, 0x56, 0x61, 0x72, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x3d, 0x0a, 0x0b, 0x6e, 0x75, 0x6c, 0x6c, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x73,
	0x75, 0x62, 0x73, 0x74, 0x72, 0x61, 0x69, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x4e, 0x75,
	0x6c, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x0b, 0x6e, 0x75, 0x6c, 0x6c, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x1a, 0x7f, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x65, 0x12, 0x38,
	0x0a, 0x18, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x76, 0x61, 0x72, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x16, 0x74, 0x79, 0x70, 0x65, 0x56, 0x61, 0x72, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x3d, 0x0a, 0x0b, 0x6e, 0x75, 0x6c, 0x6c,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e,
	0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x61, 0x69, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x4e,
	0x75, 0x6c, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x0b, 0x6e, 0x75, 0x6c, 0x6c,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x1a, 0x7f, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x38, 0x0a, 0x18, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x76, 0x61, 0x72, 0x69, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x16, 0x74, 0x79, 0x70, 0x65, 0x56, 0x61, 0x72, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x3d, 0x0a, 0x0b, 0x6e, 0x75, 0x6c,
	0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b,
	0x2e, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x61, 0x69, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x2e,
	0x4e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x0b, 0x6e, 0x75, 0x6c,
	0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x1a, 0x86, 0x01, 0x0a, 0x0b, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x54, 0x5a, 0x12, 0x38, 0x0a, 0x18, 0x74, 0x79, 0x70, 0x65,
	0x5f, 0x76, 0x61, 0x72, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x16, 0x74, 0x79, 0x70, 0x65,
	0x56, 0x61, 0x72, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x12, 0x3d, 0x0a, 0x0b, 0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72,
	0x61, 0x69, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x52, 0x0b, 0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x1a, 0x87, 0x01, 0x0a, 0x0c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x59, 0x65,
	0x61, 0x72, 0x12, 0x38, 0x0a, 0x18, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x76, 0x61, 0x72, 0x69, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x16, 0x74, 0x79, 0x70, 0x65, 0x56, 0x61, 0x72, 0x69, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x3d, 0x0a, 0x0b,
	0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1b, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x61, 0x69, 0x74, 0x2e, 0x54, 0x79,
	0x70, 0x65, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x0b,
	0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x1a, 0x86, 0x01, 0x0a, 0x0b,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x44, 0x61, 0x79, 0x12, 0x38, 0x0a, 0x18, 0x74,
	0x79, 0x70, 0x65, 0x5f, 0x76, 0x61, 0x72, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x16, 0x74,
	0x79, 0x70, 0x65, 0x56, 0x61, 0x72, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x3d, 0x0a, 0x0b, 0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x73, 0x75, 0x62,
	0x73, 0x74, 0x72, 0x61, 0x69, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x4e, 0x75, 0x6c, 0x6c,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x0b, 0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x1a, 0x7f, 0x0a, 0x04, 0x55, 0x55, 0x49, 0x44, 0x12, 0x38, 0x0a, 0x18,
	0x74, 0x79, 0x70, 0x65, 0x5f, 0x76, 0x61, 0x72, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x16,
	0x74, 0x79, 0x70, 0x65, 0x56, 0x61, 0x72, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x3d, 0x0a, 0x0b, 0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x73, 0x75,
	0x62, 0x73, 0x74, 0x72, 0x61, 0x69, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x4e, 0x75, 0x6c,
	0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x0b, 0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x1a, 0x9c, 0x01, 0x0a, 0x09, 0x46, 0x69, 0x78, 0x65, 0x64, 0x43,
	0x68, 0x61, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x38, 0x0a, 0x18, 0x74,
	0x79, 0x70, 0x65, 0x5f, 0x76, 0x61, 0x72, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x16, 0x74,
	0x79, 0x70, 0x65, 0x56, 0x61, 0x72, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x3d, 0x0a, 0x0b, 0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x73, 0x75, 0x62,
	0x73, 0x74, 0x72, 0x61, 0x69, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x4e, 0x75, 0x6c, 0x6c,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x0b, 0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x1a, 0x9a, 0x01, 0x0a, 0x07, 0x56, 0x61, 0x72, 0x43, 0x68, 0x61, 0x72,
	0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x38, 0x0a, 0x18, 0x74, 0x79, 0x70, 0x65,
	0x5f, 0x76, 0x61, 0x72, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x16, 0x74, 0x79, 0x70, 0x65,
	0x56, 0x61, 0x72, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x12, 0x3d, 0x0a, 0x0b, 0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72,
	0x61, 0x69, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x52, 0x0b, 0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x1a, 0x9e, 0x01, 0x0a, 0x0b, 0x46, 0x69, 0x78, 0x65, 0x64, 0x42, 0x69, 0x6e, 0x61, 0x72,
	0x79, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x38, 0x0a, 0x18, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x76, 0x61, 0x72, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x16, 0x74, 0x79, 0x70,
	0x65, 0x56, 0x61, 0x72, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x12, 0x3d, 0x0a, 0x0b, 0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x74,
	0x72, 0x61, 0x69, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x0b, 0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x1a, 0xb6, 0x01, 0x0a, 0x07, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73,
	0x63, 0x61, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x18, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x76, 0x61, 0x72, 0x69, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x16, 0x74, 0x79, 0x70, 0x65, 0x56, 0x61, 0x72, 0x69, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x3d, 0x0a, 0x0b,
	0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1b, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x61, 0x69, 0x74, 0x2e, 0x54, 0x79,
	0x70, 0x65, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x0b,
	0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x1a, 0xa8, 0x01, 0x0a, 0x06,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x25, 0x0a, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x61, 0x69,
	0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x38, 0x0a,
	0x18, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x76, 0x61, 0x72, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x16, 0x74, 0x79, 0x70, 0x65, 0x56, 0x61, 0x72, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x3d, 0x0a, 0x0b, 0x6e, 0x75, 0x6c, 0x6c, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x73,
	0x75, 0x62, 0x73, 0x74, 0x72, 0x61, 0x69, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x4e, 0x75,
	0x6c, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x0b, 0x6e, 0x75, 0x6c, 0x6c, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x1a, 0xa4, 0x01, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x23, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x61, 0x69, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x18, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x76, 0x61, 0x72,
	0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x16, 0x74, 0x79, 0x70, 0x65, 0x56, 0x61, 0x72, 0x69,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x3d,
	0x0a, 0x0b, 0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x61, 0x69, 0x74, 0x2e,
	0x54, 0x79, 0x70, 0x65, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x52, 0x0b, 0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x1a, 0xc8, 0x01,
	0x0a, 0x03, 0x4d, 0x61, 0x70, 0x12, 0x21, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x61, 0x69, 0x74, 0x2e, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x25, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72,
	0x61, 0x69, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x38, 0x0a, 0x18, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x76, 0x61, 0x72, 0x69, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x16, 0x74, 0x79, 0x70, 0x65, 0x56, 0x61, 0x72, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x3d, 0x0a, 0x0b, 0x6e, 0x75, 0x6c,
	0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b,
	0x2e, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x61, 0x69, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x2e,
	0x4e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x0b, 0x6e, 0x75, 0x6c,
	0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x1a, 0xf1, 0x01, 0x0a, 0x0b, 0x55, 0x73, 0x65,
	0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x79, 0x70, 0x65,
	0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0d, 0x74, 0x79, 0x70, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12,
	0x38, 0x0a, 0x18, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x76, 0x61, 0x72, 0x69, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x16, 0x74, 0x79, 0x70, 0x65, 0x56, 0x61, 0x72, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x3d, 0x0a, 0x0b, 0x6e, 0x75, 0x6c,
	0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b,
	0x2e, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x61, 0x69, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x2e,
	0x4e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x0b, 0x6e, 0x75, 0x6c,
	0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x42, 0x0a, 0x0f, 0x74, 0x79, 0x70, 0x65,
	0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x61, 0x69, 0x74, 0x2e, 0x54, 0x79,
	0x70, 0x65, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x52, 0x0e, 0x74, 0x79,
	0x70, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x1a, 0xde, 0x01, 0x0a,
	0x09, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x04, 0x6e, 0x75,
	0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x48, 0x00, 0x52, 0x04, 0x6e, 0x75, 0x6c, 0x6c, 0x12, 0x2e, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x75,
	0x62, 0x73, 0x74, 0x72, 0x61, 0x69, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x08,
	0x64, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x07, 0x62, 0x6f, 0x6f, 0x6c,
	0x65, 0x61, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x07, 0x62, 0x6f, 0x6f,
	0x6c, 0x65, 0x61, 0x6e, 0x12, 0x1a, 0x0a, 0x07, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x07, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72,
	0x12, 0x14, 0x0a, 0x04, 0x65, 0x6e, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x04, 0x65, 0x6e, 0x75, 0x6d, 0x12, 0x18, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x42, 0x0b, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x22, 0x5e, 0x0a,
	0x0b, 0x4e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x1b, 0x0a, 0x17,
	0x4e, 0x55, 0x4c, 0x4c, 0x41, 0x42, 0x49, 0x4c, 0x49, 0x54, 0x59, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x4e, 0x55, 0x4c,
	0x4c, 0x41, 0x42, 0x49, 0x4c, 0x49, 0x54, 0x59, 0x5f, 0x4e, 0x55, 0x4c, 0x4c, 0x41, 0x42, 0x4c,
	0x45, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x4e, 0x55, 0x4c, 0x4c, 0x41, 0x42, 0x49, 0x4c, 0x49,
	0x54, 0x59, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x49, 0x52, 0x45, 0x44, 0x10, 0x02, 0x42, 0x06, 0x0a,
	0x04, 0x6b, 0x69, 0x6e, 0x64, 0x22, 0x53, 0x0a, 0x0b, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x75, 0x62,
	0x73, 0x74, 0x72, 0x61, 0x69, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x52, 0x06, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x42, 0x57, 0x0a, 0x12, 0x69, 0x6f,
	0x2e, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x61, 0x69, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x50, 0x01, 0x5a, 0x2a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73,
	0x75, 0x62, 0x73, 0x74, 0x72, 0x61, 0x69, 0x74, 0x2d, 0x69, 0x6f, 0x2f, 0x73, 0x75, 0x62, 0x73,
	0x74, 0x72, 0x61, 0x69, 0x74, 0x2d, 0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0xaa, 0x02,
	0x12, 0x53, 0x75, 0x62, 0x73, 0x74, 0x72, 0x61, 0x69, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_substrait_type_proto_rawDescOnce sync.Once
	file_substrait_type_proto_rawDescData = file_substrait_type_proto_rawDesc
)

func file_substrait_type_proto_rawDescGZIP() []byte {
	file_substrait_type_proto_rawDescOnce.Do(func() {
		file_substrait_type_proto_rawDescData = protoimpl.X.CompressGZIP(file_substrait_type_proto_rawDescData)
	})
	return file_substrait_type_proto_rawDescData
}

var file_substrait_type_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_substrait_type_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_substrait_type_proto_goTypes = []interface{}{
	(Type_Nullability)(0),     // 0: substrait.Type.Nullability
	(*Type)(nil),              // 1: substrait.Type
	(*NamedStruct)(nil),       // 2: substrait.NamedStruct
	(*Type_Boolean)(nil),      // 3: substrait.Type.Boolean
	(*Type_I8)(nil),           // 4: substrait.Type.I8
	(*Type_I16)(nil),          // 5: substrait.Type.I16
	(*Type_I32)(nil),          // 6: substrait.Type.I32
	(*Type_I64)(nil),          // 7: substrait.Type.I64
	(*Type_FP32)(nil),         // 8: substrait.Type.FP32
	(*Type_FP64)(nil),         // 9: substrait.Type.FP64
	(*Type_String)(nil),       // 10: substrait.Type.String
	(*Type_Binary)(nil),       // 11: substrait.Type.Binary
	(*Type_Timestamp)(nil),    // 12: substrait.Type.Timestamp
	(*Type_Date)(nil),         // 13: substrait.Type.Date
	(*Type_Time)(nil),         // 14: substrait.Type.Time
	(*Type_TimestampTZ)(nil),  // 15: substrait.Type.TimestampTZ
	(*Type_IntervalYear)(nil), // 16: substrait.Type.IntervalYear
	(*Type_IntervalDay)(nil),  // 17: substrait.Type.IntervalDay
	(*Type_UUID)(nil),         // 18: substrait.Type.UUID
	(*Type_FixedChar)(nil),    // 19: substrait.Type.FixedChar
	(*Type_VarChar)(nil),      // 20: substrait.Type.VarChar
	(*Type_FixedBinary)(nil),  // 21: substrait.Type.FixedBinary
	(*Type_Decimal)(nil),      // 22: substrait.Type.Decimal
	(*Type_Struct)(nil),       // 23: substrait.Type.Struct
	(*Type_List)(nil),         // 24: substrait.Type.List
	(*Type_Map)(nil),          // 25: substrait.Type.Map
	(*Type_UserDefined)(nil),  // 26: substrait.Type.UserDefined
	(*Type_Parameter)(nil),    // 27: substrait.Type.Parameter
	(*emptypb.Empty)(nil),     // 28: google.protobuf.Empty
}
var file_substrait_type_proto_depIdxs = []int32{
	3,  // 0: substrait.Type.bool:type_name -> substrait.Type.Boolean
	4,  // 1: substrait.Type.i8:type_name -> substrait.Type.I8
	5,  // 2: substrait.Type.i16:type_name -> substrait.Type.I16
	6,  // 3: substrait.Type.i32:type_name -> substrait.Type.I32
	7,  // 4: substrait.Type.i64:type_name -> substrait.Type.I64
	8,  // 5: substrait.Type.fp32:type_name -> substrait.Type.FP32
	9,  // 6: substrait.Type.fp64:type_name -> substrait.Type.FP64
	10, // 7: substrait.Type.string:type_name -> substrait.Type.String
	11, // 8: substrait.Type.binary:type_name -> substrait.Type.Binary
	12, // 9: substrait.Type.timestamp:type_name -> substrait.Type.Timestamp
	13, // 10: substrait.Type.date:type_name -> substrait.Type.Date
	14, // 11: substrait.Type.time:type_name -> substrait.Type.Time
	16, // 12: substrait.Type.interval_year:type_name -> substrait.Type.IntervalYear
	17, // 13: substrait.Type.interval_day:type_name -> substrait.Type.IntervalDay
	15, // 14: substrait.Type.timestamp_tz:type_name -> substrait.Type.TimestampTZ
	18, // 15: substrait.Type.uuid:type_name -> substrait.Type.UUID
	19, // 16: substrait.Type.fixed_char:type_name -> substrait.Type.FixedChar
	20, // 17: substrait.Type.varchar:type_name -> substrait.Type.VarChar
	21, // 18: substrait.Type.fixed_binary:type_name -> substrait.Type.FixedBinary
	22, // 19: substrait.Type.decimal:type_name -> substrait.Type.Decimal
	23, // 20: substrait.Type.struct:type_name -> substrait.Type.Struct
	24, // 21: substrait.Type.list:type_name -> substrait.Type.List
	25, // 22: substrait.Type.map:type_name -> substrait.Type.Map
	26, // 23: substrait.Type.user_defined:type_name -> substrait.Type.UserDefined
	23, // 24: substrait.NamedStruct.struct:type_name -> substrait.Type.Struct
	0,  // 25: substrait.Type.Boolean.nullability:type_name -> substrait.Type.Nullability
	0,  // 26: substrait.Type.I8.nullability:type_name -> substrait.Type.Nullability
	0,  // 27: substrait.Type.I16.nullability:type_name -> substrait.Type.Nullability
	0,  // 28: substrait.Type.I32.nullability:type_name -> substrait.Type.Nullability
	0,  // 29: substrait.Type.I64.nullability:type_name -> substrait.Type.Nullability
	0,  // 30: substrait.Type.FP32.nullability:type_name -> substrait.Type.Nullability
	0,  // 31: substrait.Type.FP64.nullability:type_name -> substrait.Type.Nullability
	0,  // 32: substrait.Type.String.nullability:type_name -> substrait.Type.Nullability
	0,  // 33: substrait.Type.Binary.nullability:type_name -> substrait.Type.Nullability
	0,  // 34: substrait.Type.Timestamp.nullability:type_name -> substrait.Type.Nullability
	0,  // 35: substrait.Type.Date.nullability:type_name -> substrait.Type.Nullability
	0,  // 36: substrait.Type.Time.nullability:type_name -> substrait.Type.Nullability
	0,  // 37: substrait.Type.TimestampTZ.nullability:type_name -> substrait.Type.Nullability
	0,  // 38: substrait.Type.IntervalYear.nullability:type_name -> substrait.Type.Nullability
	0,  // 39: substrait.Type.IntervalDay.nullability:type_name -> substrait.Type.Nullability
	0,  // 40: substrait.Type.UUID.nullability:type_name -> substrait.Type.Nullability
	0,  // 41: substrait.Type.FixedChar.nullability:type_name -> substrait.Type.Nullability
	0,  // 42: substrait.Type.VarChar.nullability:type_name -> substrait.Type.Nullability
	0,  // 43: substrait.Type.FixedBinary.nullability:type_name -> substrait.Type.Nullability
	0,  // 44: substrait.Type.Decimal.nullability:type_name -> substrait.Type.Nullability
	1,  // 45: substrait.Type.Struct.types:type_name -> substrait.Type
	0,  // 46: substrait.Type.Struct.nullability:type_name -> substrait.Type.Nullability
	1,  // 47: substrait.Type.List.type:type_name -> substrait.Type
	0,  // 48: substrait.Type.List.nullability:type_name -> substrait.Type.Nullability
	1,  // 49: substrait.Type.Map.key:type_name -> substrait.Type
	1,  // 50: substrait.Type.Map.value:type_name -> substrait.Type
	0,  // 51: substrait.Type.Map.nullability:type_name -> substrait.Type.Nullability
	0,  // 52: substrait.Type.UserDefined.nullability:type_name -> substrait.Type.Nullability
	27, // 53: substrait.Type.UserDefined.type_parameters:type_name -> substrait.Type.Parameter
	28, // 54: substrait.Type.Parameter.null:type_name -> google.protobuf.Empty
	1,  // 55: substrait.Type.Parameter.data_type:type_name -> substrait.Type
	56, // [56:56] is the sub-list for method output_type
	56, // [56:56] is the sub-list for method input_type
	56, // [56:56] is the sub-list for extension type_name
	56, // [56:56] is the sub-list for extension extendee
	0,  // [0:56] is the sub-list for field type_name
}

func init() { file_substrait_type_proto_init() }
func file_substrait_type_proto_init() {
	if File_substrait_type_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_substrait_type_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Type); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_substrait_type_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NamedStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_substrait_type_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Type_Boolean); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_substrait_type_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Type_I8); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_substrait_type_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Type_I16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_substrait_type_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Type_I32); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_substrait_type_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Type_I64); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_substrait_type_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Type_FP32); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_substrait_type_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Type_FP64); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_substrait_type_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Type_String); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_substrait_type_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Type_Binary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_substrait_type_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Type_Timestamp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_substrait_type_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Type_Date); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_substrait_type_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Type_Time); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_substrait_type_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Type_TimestampTZ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_substrait_type_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Type_IntervalYear); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_substrait_type_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Type_IntervalDay); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_substrait_type_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Type_UUID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_substrait_type_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Type_FixedChar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_substrait_type_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Type_VarChar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_substrait_type_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Type_FixedBinary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_substrait_type_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Type_Decimal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_substrait_type_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Type_Struct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_substrait_type_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Type_List); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_substrait_type_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Type_Map); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_substrait_type_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Type_UserDefined); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_substrait_type_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Type_Parameter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_substrait_type_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Type_Bool)(nil),
		(*Type_I8_)(nil),
		(*Type_I16_)(nil),
		(*Type_I32_)(nil),
		(*Type_I64_)(nil),
		(*Type_Fp32)(nil),
		(*Type_Fp64)(nil),
		(*Type_String_)(nil),
		(*Type_Binary_)(nil),
		(*Type_Timestamp_)(nil),
		(*Type_Date_)(nil),
		(*Type_Time_)(nil),
		(*Type_IntervalYear_)(nil),
		(*Type_IntervalDay_)(nil),
		(*Type_TimestampTz)(nil),
		(*Type_Uuid)(nil),
		(*Type_FixedChar_)(nil),
		(*Type_Varchar)(nil),
		(*Type_FixedBinary_)(nil),
		(*Type_Decimal_)(nil),
		(*Type_Struct_)(nil),
		(*Type_List_)(nil),
		(*Type_Map_)(nil),
		(*Type_UserDefined_)(nil),
		(*Type_UserDefinedTypeReference)(nil),
	}
	file_substrait_type_proto_msgTypes[26].OneofWrappers = []interface{}{
		(*Type_Parameter_Null)(nil),
		(*Type_Parameter_DataType)(nil),
		(*Type_Parameter_Boolean)(nil),
		(*Type_Parameter_Integer)(nil),
		(*Type_Parameter_Enum)(nil),
		(*Type_Parameter_String_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_substrait_type_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_substrait_type_proto_goTypes,
		DependencyIndexes: file_substrait_type_proto_depIdxs,
		EnumInfos:         file_substrait_type_proto_enumTypes,
		MessageInfos:      file_substrait_type_proto_msgTypes,
	}.Build()
	File_substrait_type_proto = out.File
	file_substrait_type_proto_rawDesc = nil
	file_substrait_type_proto_goTypes = nil
	file_substrait_type_proto_depIdxs = nil
}
